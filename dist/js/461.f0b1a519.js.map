{"version":3,"file":"js/461.f0b1a519.js","mappings":"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","sources":["webpack://lbrygen-frontend/./src/stores/StreamStore.js","webpack://lbrygen-frontend/./src/utils/ReUtils.js","webpack://lbrygen-frontend/./src/components/LGAvatarLabel.vue","webpack://lbrygen-frontend/./src/components/base/AvatarLabel.vue","webpack://lbrygen-frontend/./src/components/base/AvatarLabel.vue?5662","webpack://lbrygen-frontend/./src/components/LGAvatarLabel.vue?393b","webpack://lbrygen-frontend/./src/components/SearchItem.vue","webpack://lbrygen-frontend/./src/components/SearchItem.vue?777b"],"sourcesContent":["import { defineStore } from 'pinia'\nimport EventService from \"../services/EventService.js\"\n\nlet streamModel = {\n    url: '',\n    desc: '',\n    title: '',\n    claimId: '',\n    claimName: '',\n    avatar: Object,\n    tags: ['']\n}\n\nexport const useStreamStore = defineStore (\n    'stream', \n    {\n        state: () => ({\n            stream : streamModel\n        }),\n        getters: {\n            getStreamUrl: (state) => state.stream.url,\n            getStreamDesc: (state) => state.stream.desc,\n            getStreamTitle: (state) => state.stream.title,\n            getClaimId: (state) => state.stream.claimId,\n            getClaimName: (state) => state.stream.claimName,\n            getStreamTags: (state) => state.stream.tags,\n            getAvatar: (state) => state.stream.avatar,\n        },\n        actions: {\n            async requestStream(url) {\n                EventService.getStreamByUrl(url).then((response) => {\n\n                    this.stream.url = response.streaming_url\n                    this.stream.claimId = response.claim_id\n                    this.stream.claimName = response.claim_name\n\n                    // console.log(response)\n                    // console.log(this.claimId)\n                    // console.log(this.claimName)\n\n                    if (response.metadata !== undefined) {\n                        \n                        if (response.metadata.description !== undefined) {\n                            this.stream.desc = response.metadata.description\n                        } else {\n                            this.stream.desc = 'No video description found.'\n                        }\n\n                        if (response.metadata.title !== undefined) {\n                            this.stream.title = response.metadata.title\n                        } else {\n                            this.stream.title = response.metadata.source.name\n                        }\n\n                        if (response.metadata.tags !== undefined) {\n                            this.stream.tags = Object.values(response.metadata.tags)\n                        }\n                    }\n                })\n            },\n            storeChannelInfo(avatar) {\n                this.stream.avatar = avatar\n            }\n        }\n        \n    }\n)\n","exports.linkify = (str) => {\n    /* eslint-disable no-useless-escape */\n    let re = /(?![^<]*>|[^<>]*<\\/)((https?:)\\/\\/[a-z0-9&#=.\\/\\-?_]+)/gi\n    let res = str.replace(re, '<a href=\"$1\" target=\"_blank\">$1</a>')\n\n    return res\n}","<template>\n    <AvatarLabel :showAvatar=\"this.showAvatar\" @click=\"gotoChannelView()\">\n        <template v-slot:avatar>\n            <div v-if=\"\n            avatar && \n            avatar.value && \n            avatar.value.thumbnail\" \n            id=\"channel-avatar\">\n                <img :src=\"avatar.value.thumbnail.url\" loading=\"lazy\">\n            </div>\n        </template>\n\n        <template v-slot:label>\n            <label id=\"channel-title\">\n                <div v-if=\"\n                avatar &&\n                avatar.value &&\n                avatar.value.title\">\n                    {{ avatar.value.title }}\n                </div>\n                <div v-else> {{ backupTitle.replace('@','') }} </div>\n                <div id=\"channel-name\" v-if=\"showName\"> \n                    {{ avatar.name }}\n                </div>\n            </label>\n        </template>\n\n    </AvatarLabel>\n</template>\n\n<script>\nimport AvatarLabel from \"./base/AvatarLabel.vue\";\nexport default {\n    name: \"LGAvatarLabel\",\n    components: {\n        AvatarLabel\n    },\n    props: {\n        avatar: Object,\n        showAvatar: {\n            default: true,\n            type: Boolean\n        },\n        showName: {\n            default: false,\n            type: Boolean\n        },\n    },\n    data() {\n        return {\n            backupTitle: ''\n        }\n    },\n    mounted() {\n        if (this.avatar.name) {\n            this.backupTitle = this.avatar.name.split('').join('')\n        }\n    },\n    methods: {\n        gotoChannelView() {\n            this.$router.push({\n                name: 'search',\n                query: {\n                    q: this.avatar.name,\n                    qt: 'channel',\n                    st: 'video',\n                    p: 1\n                }\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n#channel-avatar {\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n}\n\n#channel-title {\n    font-size: 0.78rem;\n    font-weight: 300;\n    cursor: pointer;\n}\n</style>","<template>\n    <div class=\"flex-x-start mt-2\">\n        <div v-if=\"showAvatar\" class=\"avatar mr-2\">\n            <div id=\"base-avatar\" class=\"rounded-full\">\n                <slot name=\"avatar\"></slot>\n            </div>\n        </div>\n        <div v-else></div>\n\n        <div id=\"base-label\" >\n            <slot name=\"label\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        showAvatar: {\n            default: true,\n            type: Boolean\n        },\n    },\n}\n</script>\n\n<style>\n\n</style>","import { render } from \"./AvatarLabel.vue?vue&type=template&id=267964a0\"\nimport script from \"./AvatarLabel.vue?vue&type=script&lang=js\"\nexport * from \"./AvatarLabel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/sashimi/Coding/lbrygen-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./LGAvatarLabel.vue?vue&type=template&id=1a7317a4&scoped=true\"\nimport script from \"./LGAvatarLabel.vue?vue&type=script&lang=js\"\nexport * from \"./LGAvatarLabel.vue?vue&type=script&lang=js\"\n\nimport \"./LGAvatarLabel.vue?vue&type=style&index=0&id=1a7317a4&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/sashimi/Coding/lbrygen-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1a7317a4\"]])\n\nexport default __exports__","<template>\n    <div class=\"flex-x items-stretch\">\n\n        <div class=\"avatar\">\n            <div id=\"thumbnail\" class=\"rounded\">\n                <img v-if=\"thumbnail\" :src=\"optimizedThumbnail\" @error=\"useBackupThumbnail()\">\n            </div>\n        </div>\n\n        <div id=\"streaming-url-wrapper\" class=\"flex-1 grid\">\n\n            <label id=\"streaming-url\" @click=\"getStream(streamUrl)\">\n                <slot name=\"center\"></slot>\n            </label>\n\n            <LGAvatarLabel\n            :showAvatar=\"this.showAvatar\"\n            :avatar=\"this.avatar\">\n            </LGAvatarLabel>\n\n        </div>\n\n        <div id=\"search-result-rear\" class=\"grid grid-rows-6\">\n            <slot name=\"rear\"></slot>\n        </div>\n\n    </div>\n    <div class=\"divider h-0\"></div>\n</template>\n\n<script>\nimport { useStreamStore } from \"@/stores/StreamStore.js\"\nimport LGAvatarLabel from \"./LGAvatarLabel.vue\"\nimport { ODYSEE_OPTIMIZE } from '@/constants/env'\nexport default {\n    components: {\n        LGAvatarLabel\n    },\n    props: {\n        thumbnail: Object,\n        streamUrl: String,\n        avatar: Object,\n        showAvatar: {\n            default: true,\n            type: Boolean\n        },\n    },\n    data() {\n        return {\n            backupThumbnail: '',\n            optimizedThumbnail: '',\n        }\n    },\n    mounted() {\n        if (this.thumbnail &&\n            this.thumbnail.url) {\n            this.optimizedThumbnail = ODYSEE_OPTIMIZE + this.thumbnail.url\n            this.backupThumbnail = this.thumbnail.url\n        }\n    },\n    setup() {\n        const stream = useStreamStore()\n        return { stream }\n    },\n    methods: {\n        async getStream(url) {\n\n            this.stream.storeChannelInfo(this.avatar)\n            this.stream.requestStream(url).then(() => {\n                this.$router.push({\n                    name: \"stream\",\n                    query: { url: url },\n                })\n            })\n        },\n        useBackupThumbnail() {\n            this.optimizedThumbnail = this.backupThumbnail\n        }\n    }\n}\n</script>\n\n<style>\n#search-result-rear {\n    align-content: center;\n}\n\n#streaming-url-wrapper {\n    padding-left: calc(3rem/2);\n    width: 300px;\n    text-align: start;\n    align-self: flex-start;\n    font-size: 1rem;\n    font-weight: 700;  \n}\n\n#streaming-url {\n    cursor: pointer;\n\n    /* Standard way to clamp */\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n}\n\n#thumbnail {\n    width: calc(12rem * 1.2);\n    height: calc(12rem * 0.6);\n}\n\n/* md screen */\n@media (max-width: 960px) {\n    #search-result-rear {\n        display: none;\n    }\n}\n\n@media (max-width: 960px) {\n    #thumbnail {\n        width: calc(12rem * 1.2 * 0.66);\n        height: calc(12rem * 0.6 * 0.77);\n    }\n    #content {\n        margin-right: 1rem;\n        margin-left: 1rem;\n    }\n    #streaming-url {\n        -webkit-line-clamp: 2;\n    }\n}\n</style>","import { render } from \"./SearchItem.vue?vue&type=template&id=1b309c43\"\nimport script from \"./SearchItem.vue?vue&type=script&lang=js\"\nexport * from \"./SearchItem.vue?vue&type=script&lang=js\"\n\nimport \"./SearchItem.vue?vue&type=style&index=0&id=1b309c43&lang=css\"\n\nimport exportComponent from \"/home/sashimi/Coding/lbrygen-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["streamModel","url","desc","title","claimId","claimName","avatar","Object","tags","useStreamStore","defineStore","state","stream","getters","getStreamUrl","getStreamDesc","getStreamTitle","getClaimId","getClaimName","getStreamTags","getAvatar","actions","async","EventService","then","response","this","streaming_url","claim_id","claim_name","undefined","metadata","description","source","name","values","storeChannelInfo","exports","str","re","res","replace","id","_createBlock","_component_AvatarLabel","showAvatar","onClick","$options","$props","value","thumbnail","_createElementBlock","_createElementVNode","src","loading","label","_hoisted_4","_toDisplayString","_hoisted_5","$data","class","_renderSlot","_ctx","props","default","type","Boolean","__exports__","components","AvatarLabel","showName","data","backupTitle","mounted","split","join","methods","gotoChannelView","$router","push","query","q","qt","st","p","render","onError","_createVNode","_component_LGAvatarLabel","_hoisted_7","LGAvatarLabel","streamUrl","String","backupThumbnail","optimizedThumbnail","ODYSEE_OPTIMIZE","setup","requestStream","useBackupThumbnail"],"sourceRoot":""}